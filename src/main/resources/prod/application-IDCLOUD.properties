
#CAS server credentials
CAS_USERNAME = gtotechmngr
CAS_PASSWORD = moliets-40

portal.url=http://localhost:3005
api.url=http://35.180.36.251:8080/eziodemobackendv2-0.0.1-SNAPSHOT/
backend_config = IDCLOUD

logo.path=${portal.url}/src/img/gemaltologo.png

#P2P Feature true = enabled / false = disabled 
isP2PEnabled = true

#Host URL of application
#hostURL = http://10.10.84.139:8081/eziodemobackendv2/
hostURL = ${api.url}/

#Root URL - Used to create User Account Activation link
rootURL = ${api.url}/

frontURL = ${portal.url}/

#Callback URL
#verifyTxCallbackURL = http://10.10.84.139:8081/eziodemobackendv2/oobsCallBack.action
verifyTxCallbackURL = ${api.url}/oobsCallBack.action

#============ OOBS Server URLs =================

# check OOBS queue
#oobsQueueURL = http://10.10.84.139:8081/oobs-dispatcher/domains/default/messages/
oobsQueueURL = https://dispatcher-ecm-demo.rnd.gemaltodigitalbankingidcloud.com/dispatcher/domains/gtoeziodemo/messages/

#send pushnotification
#pushNotificationURL = http://10.10.84.139:8081/oobs-dispatcher/domains/default/users/
pushNotificationURL = https://dispatcher-ecm-demo.rnd.gemaltodigitalbankingidcloud.com/dispatcher/domains/gtoeziodemo/users/

#Mobile Enrollment OOBS URL
#oobsMobileEnrollmentURL = http://10.10.84.139:8081/oobs-dispatcher/domains/default/users/<userId>/applications/eziomobileappID/register
oobsMobileEnrollmentURL = https://dispatcher-ecm-demo.rnd.gemaltodigitalbankingidcloud.com/dispatcher/domains/gtoeziodemo/users/<userId>/applications/0/register


#============ CAS Server URLs =================

#CAS server call
#casServerURL = http://10.10.84.139:80/saserver/master/api/auth/otb
casServerURL = https://api-cas-demo.rnd.gemaltodigitalbankingidcloud.com/saserver/gtoeziodemo/api/auth/otb

#get user details in XML format from CAS server by passing userId
#getUserFromCASServer = http://10.10.84.139:80/saserver/master/api/users/
getUserFromCASServer = https://api-cas-demo.rnd.gemaltodigitalbankingidcloud.com/saserver/gtoeziodemo/api/users/

#CAS server authentication URL
#casServerAuth = http://10.10.84.139/saserver/master/api/auth/pwd
casServerAuth = https://api-cas-demo.rnd.gemaltodigitalbankingidcloud.com/saserver/gtoeziodemo/api/auth/pwd

## Batch provisioning URLs
# Upload batch provisioning file
#uploadBatchProvisioningFileURL = http://10.10.84.139:80/saserver/master/api/provisioning/batchprov/upload/
uploadBatchProvisioningFileURL = https://api-cas-demo.rnd.gemaltodigitalbankingidcloud.com/saserver/gtoeziodemo/api/provisioning/batchprov/upload/

#Launch batch provisioning
#launchProvisioningURL = http://10.10.84.139:80/saserver/master/api/provisioning/batchprov/process/
launchProvisioningURL = https://api-cas-demo.rnd.gemaltodigitalbankingidcloud.com/saserver/gtoeziodemo/api/provisioning/batchprov/process/

#Get provisioning status
#provisioningStatusURL = http://10.10.84.139:80/saserver/master/api/provisioning/batchprov/status/
provisioningStatusURL = https://api-cas-demo.rnd.gemaltodigitalbankingidcloud.com/saserver/gtoeziodemo/api/provisioning/batchprov/status/

#Link device with upload provisioning file
#http://10.10.84.139:80/saserver/master/api/devices/<deviceID>?TokenType=7
#linkDevicesURL = http://10.10.84.139:80/saserver/master/api/devices/<xDeviceId>?tokenType=<xDeviceType>
linkDevicesURL = https://api-cas-demo.rnd.gemaltodigitalbankingidcloud.com/saserver/gtoeziodemo/api/devices/<xDeviceId>?tokenType=<xDeviceType>

#Validate OTP, generated with Flex token
#validateOTPURL = http://10.10.84.139:80/saserver/master/api/auth/otb/
validateOTPURL = https://api-cas-demo.rnd.gemaltodigitalbankingidcloud.com/saserver/gtoeziodemo/api/auth/otb/

#Get list of tokens
#getListOfTokensURL = http://10.10.84.139:80/saserver/master/api/users/<userID>?tokenListFormat=tokens
getListOfTokensURL = https://api-cas-demo.rnd.gemaltodigitalbankingidcloud.com/saserver/gtoeziodemo/api/users/<userID>?tokenListFormat=tokens

#append device ID at the end, get the device details by device Id
#same URL for token resynchronization
#getDeviceByDeviceIdURL = http://10.10.84.139:80/saserver/master/api/devices/
getDeviceByDeviceIdURL = https://api-cas-demo.rnd.gemaltodigitalbankingidcloud.com/saserver/gtoeziodemo/api/devices/

#Get PAN no from DCV device
#getPANfromDCVdeviceToBeReworkedURL = http://10.10.84.139:80/saserver/master/api/devices/<deviceID>?TokenType=7
getPANfromDCVdeviceToBeReworkedURL = https://api-cas-demo.rnd.gemaltodigitalbankingidcloud.com/saserver/gtoeziodemo/api/devices/<deviceID>?TokenType=7

#Get device device state
#getDeviceStateURL = http://10.10.84.139:80/saserver/master/api/devices/otb/
getDeviceStateURL = https://api-cas-demo.rnd.gemaltodigitalbankingidcloud.com/saserver/gtoeziodemo/api/devices/otb/

#======= EPS Server URLs ======================

#Hit EzioDemo (Old web app) application to communicate with EPS HSQLDB
getAndUpdateTokenCount = ${portal.url}/eziodemobackendv2-operation.jsp
#getAndUpdateTokenCount = https://enroller-eps-demo.rnd.gemaltodigitalbankingidcloud.com/eziomobiledemo/eziodemobackendv2-operation.jsp

#Enroll mobile EPS URL
#mobileEnrollmentEPSURL = http://10.10.84.139:8081/enroller/api/enrollment/oath/enroll
mobileEnrollmentEPSURL = https://enroller-eps-demo.rnd.gemaltodigitalbankingidcloud.com/enroller/api/enrollment/oath/enroll

#======= EMV Card Creatation, Link and Activation URLs =============

#emvCardCreatationURL = http://10.10.84.139:80/saserver/master/api/devices/emv/
emvCardCreatationURL = https://api-cas-demo.rnd.gemaltodigitalbankingidcloud.com/saserver/gtoeziodemo/api/devices/emv/

#emvCardLinkURL = http://10.10.84.139:80/saserver/master/api/users/
emvCardLinkURL = https://api-cas-demo.rnd.gemaltodigitalbankingidcloud.com/saserver/gtoeziodemo/api/users/

#emvCardActivationURL = http://10.10.84.139/saserver/master/api/devices/emv/<PAN-NUMBER>:00
emvCardActivationURL = https://api-cas-demo.rnd.gemaltodigitalbankingidcloud.com/saserver/gtoeziodemo/api/devices/emv/<PAN-NUMBER>:00

#========= DCV Card =================

#dcvValidationURL = http://10.10.84.139/saserver/master/api/auth/emv
dcvValidationURL = https://api-cas-demo.rnd.gemaltodigitalbankingidcloud.com/saserver/gtoeziodemo/api/auth/emv

#========= QR CODE TOKEN =================

qrtoken_encryptionmode = ENCRYPTION_DFF_DYNAMIC_KEY
#possible values ENCRYPTION_DFF_NO (0x10),ENCRYPTION_DFF_DYNAMIC_KEY (0x11),ENCRYPTION_DFF_CUSTOMER_KEY (0x12);

qrtoken_algo = ENCRYPTION_ALGO_AES256
# possible values ENCRYPTION_ALGO_TDES ("0"), ENCRYPTION_ALGO_AES128 ("1"), ENCRYPTION_ALGO_AES256("2");

qrtoken_randommode = FIXED
#possible values AUTO, FIXED

qrtoken_randomvalue = 000003E8
# 4 bytes big endian

qrtoken_PrimKeyTDES = 000102030405060708090A0B0C0D0E0F0001020304050607

qrtoken_PrimKeyAES128 = 000102030405060708090A0B0C0D0E0F

qrtoken_PrimKeyAES256 = 000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F

qrtoken_CustKeyTDES = 739E0E8490EACBCB2EA11D4A5DBEFBAE739E0E8490EACBCB

qrtoken_CustKeyAES128 = 739E0E8490EACBCB2EA11D4A5DBEFBAE

qrtoken_CustKeyAES256 = 739E0E8490EACBCB2EA11D4A5DBEFBAED3BD2684A878040FCA94B0DE6586C374

qrtoken_seedDpuk = 3
# possible values 1,2,3

qrtoken_seedOTP = 1
# possible values 1,2

qrtoken_qrcodeversion =  QR_CODE_VERSION_AUTO
#possible values QR_CODE_VERSION_AUTO (-1), QR_CODE_VERSION_4 (78),QR_CODE_VERSION_5 (106),QR_CODE_VERSION_6 (134),QR_CODE_VERSION_7 (154),QR_CODE_VERSION_8 (192),QR_CODE_VERSION_9 (230);

qrtoken_hashMode = SHA256
#possible values SHA1, SHA256, SHA512